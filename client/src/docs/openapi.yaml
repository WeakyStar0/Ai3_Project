openapi: 3.0.1
info:
  title: Sistema de Reserva de Salas API
  description: API para gerir reservas de salas de reunião, incluindo autenticação, criação, consulta, edição e cancelamento de reservas.
  version: 1.0.0
  contact:
    name: Suporte API
    email: suporte@empresa.fixe.com

servers:
- url: https://sim.com
  description: Servidor de Produção
- url: https://sim.com
  description: Servidor de Staging

tags:
- name: Autenticação
  description: Endpoints relacionados com a autenticação e gestão de utilizadores
- name: Reservas
  description: Endpoints para criação, consulta, edição e cancelamento de reservas
- name: Gestão de Salas
  description: Endpoints para a administração das salas

paths:
  /auth/register:
    post:
      tags:
      - Autenticação
      summary: Registar um novo utilizador
      description: Cria uma nova conta de utilizador.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../../../Schemas/userRegistration_schema.json'
      responses:
        '201':
          description: Utilizador criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Utilizador registado com sucesso."
        '400':
          description: Erro na requisição
        '409':
          description: Utilizador já existe

  /auth/login:
    post:
      tags:
      - Autenticação
      summary: Login de utilizador
      description: Autentica um utilizador existente e retorna um token de acesso.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../../../Schemas/userLogin_schema.json'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token de acesso JWT
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Credenciais inválidas

  /rooms:
    get:
      tags:
      - Gestão de Salas
      summary: Listar todas as salas
      description: Retorna uma lista de todas as salas disponíveis para reserva.
      operationId: listRooms
      responses:
        '200':
          description: Lista de salas disponíveis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../../../Schemas/roomManagement_schema.json'

    post:
      tags:
      - Gestão de Salas
      summary: Criar uma nova sala
      description: Adiciona uma nova sala ao sistema.
      operationId: createRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../../../Schemas/roomManagement_schema.json'
      responses:
        '201':
          description: Sala criada com sucesso
        '400':
          description: Dados inválidos

  /rooms/{roomId}:
    get:
      tags:
      - Gestão de Salas
      summary: Obter detalhes da sala
      description: Retorna informações detalhadas sobre uma sala específica.
      operationId: getRoomDetails
      parameters:
      - in: path
        name: roomId
        schema:
          type: string
        required: true
        description: ID da sala
      - in: query
        name: includeDetails
        schema:
          type: boolean
        required: false
        description: Indica se detalhes adicionais devem ser incluídos
      - in: header
        name: Content-Type
        schema:
          type: string
          enum: [ "application/json" ]
        required: true
        description: Tipo de conteúdo aceito
      - in: header
        name: Cache-Control
        schema:
          type: string
        required: false
        description: Configuração de cache para a resposta
      - in: cookie
        name: sessionId
        schema:
          type: string
        required: false
        description: ID da sessão autenticada do usuário
      responses:
        '200':
          description: Detalhes da sala
          content:
            application/json:
              schema:
                $ref: '../../../Schemas/roomManagement_schema.json'
        '404':
          description: Sala não encontrada

  /reservations:
    get:
      tags:
      - Reservas
      summary: Listar todas as reservas
      description: Retorna uma lista de todas as reservas existentes.
      operationId: listReservations
      parameters:
      - in: query
        name: roomId
        schema:
          type: string
        required: false
        description: Filtrar reservas por ID da sala
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        required: false
        description: Filtrar reservas a partir de uma data específica
      - in: header
        name: Content-Type
        schema:
          type: string
          enum: [ "application/json" ]
        required: true
        description: Tipo de conteúdo aceito
      - in: cookie
        name: sessionId
        schema:
          type: string
        required: false
        description: ID da sessão autenticada do usuário
      responses:
        '200':
          description: Lista de reservas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../../../Schemas/createReservation_schema.json'

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
          example: "johndoe"
        password:
          type: string
          minLength: 8
          format: password
        email:
          type: string
          format: email
      required:
      - username
      - password
      - email

    UserLogin:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
          example: "johndoe"
        password:
          type: string
          minLength: 8
          format: password
      required:
      - username
      - password

    CreateReservation:
      type: object
      properties:
        roomId:
          type: string
          pattern: "^[a-fA-F0-9]{24}$"
          example: "60db3c23f8a9c07b2f5d6d3f"
        startTime:
          type: string
          format: date-time
          example: "2024-10-25T10:00:00Z"
        endTime:
          type: string
          format: date-time
          example: "2024-10-25T11:00:00Z"
        description:
          type: string
          maxLength: 255
          example: "Reunião de projeto"
      required:
      - roomId
      - startTime
      - endTime

    Room:
      type: object
      properties:
        roomName:
          type: string
          minLength: 1
          maxLength: 100
          example: "Sala de Conferência"
      required:
      - roomName

    RoomManagement:
      type: object
      properties:
        roomName:
          type: string
          minLength: 1
          maxLength: 100
          example: "Sala de Conferência"
        capacity:
          type: integer
          minimum: 1
          example: 20
        equipment:
          type: array
          items:
            type: string
          example: [ "Projetor", "Videoconferência" ]
      required:
      - roomName
      - capacity

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
- BearerAuth: []
