openapi: 3.0.1
info:
  title: Sistema de Reserva de Salas API
  description: API para gerir reservas de salas, incluindo autenticação, criação, consulta, edição e cancelamento de reservas.
  version: 1.3.0
  contact:
    name: Suporte API
    email: suporte@empresa.fixe.com

servers:
- url: https://sim.com
  description: Servidor de Produção
- url: https://sim-staging.com
  description: Servidor de Staging

tags:
- name: Autenticação
  description: Endpoints relacionados com a autenticação e gestão de utilizadores
- name: Reservas
  description: Endpoints para criação, consulta, edição e cancelamento de reservas
- name: Gestão de Salas
  description: Endpoints para a administração das salas

paths:
  /auth/register:
    post:
      tags: [ Autenticação ]
      summary: Registar um novo utilizador
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: Utilizador criado com sucesso
        '400':
          description: Erro na requisição
        '409':
          description: Utilizador já existe

  /auth/login:
    post:
      tags: [ Autenticação ]
      summary: Login de utilizador
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '403':
          description: Credenciais inválidas

  /auth/recover-password:
    post:
      tags: [ Autenticação ]
      summary: Recuperação de password
      operationId: recoverPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordRecovery'
      responses:
        '200':
          description: Email de recuperação enviado
        '404':
          description: Utilizador não encontrado

  /rooms:
    get:
      tags: [ Gestão de Salas ]
      summary: Listar todas as salas
      operationId: listRooms
      security: [ { BearerAuth: [] } ]
      responses:
        '200':
          description: Lista de salas disponíveis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomManagement'

    post:
      tags: [ Gestão de Salas ]
      summary: Criar uma nova sala
      operationId: createRoom
      security: [ { BearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomManagement'
      responses:
        '201':
          description: Sala criada com sucesso
        '409':
          description: Sala já existe

  /reservations:
    post:
      tags: [ Reservas ]
      summary: Criar uma nova reserva
      operationId: createReservation
      security: [ { BearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReservation'
      responses:
        '201':
          description: Reserva criada com sucesso
        '400':
          description: Dados inválidos
        '409':
          description: Conflito de horário

    put:
      tags: [ Reservas ]
      summary: Editar uma reserva existente
      operationId: editReservation
      security: [ { BearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditReservation'
      responses:
        '200':
          description: Reserva atualizada com sucesso
        '404':
          description: Reserva não encontrada

    delete:
      tags: [ Reservas ]
      summary: Cancelar uma reserva
      operationId: cancelReservation
      security: [ { BearerAuth: [] } ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReservation'
      responses:
        '200':
          description: Reserva cancelada com sucesso
        '404':
          description: Reserva não encontrada

  /reservations/{reservationId}:
    get:
      tags: [ Reservas ]
      summary: Consultar detalhes de uma reserva
      operationId: getReservationDetails
      security: [ { BearerAuth: [] } ]
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: string
          pattern: '^[a-fA-F0-9]{24}$'
      responses:
        '200':
          description: Detalhes da reserva
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservation'
        '404':
          description: Reserva não encontrada

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
        password:
          type: string
          minLength: 8
        email:
          type: string
          format: email
      required: [ username, password, email ]

    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [ username, password ]

    PasswordRecovery:
      type: object
      properties:
        email:
          type: string
          format: email
      required: [ email ]

    RoomManagement:
      type: object
      properties:
        roomName:
          type: string
          minLength: 1
          maxLength: 100
        capacity:
          type: integer
          minimum: 1
        equipment:
          type: array
          items:
            type: string
      required: [ roomName, capacity ]

    CreateReservation:
      type: object
      properties:
        roomId:
          type: string
          pattern: '^[a-fA-F0-9]{24}$'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        description:
          type: string
          maxLength: 255
      required: [ roomId, startTime, endTime ]

    EditReservation:
      type: object
      properties:
        reservationId:
          type: string
          pattern: '^[a-fA-F0-9]{24}$'
        roomId:
          type: string
          pattern: '^[a-fA-F0-9]{24}$'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        description:
          type: string
          maxLength: 255
      required: [ reservationId, roomId, startTime, endTime ]

    CancelReservation:
      type: object
      properties:
        reservationId:
          type: string
          pattern: '^[a-fA-F0-9]{24}$'
      required: [ reservationId ]

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
